// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: toolproxy/v1/command.proto

package v1

import (
	context "context"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/hxtk/yggdrasil/common/authz/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_UNDEFINED Status = 0
	Status_SUBMITTED Status = 1
	Status_READY     Status = 2
	Status_RUNNING   Status = 3
	Status_SUCCESS   Status = 4
	Status_ERROR     Status = 5
	Status_DELETED   Status = 6
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "UNDEFINED",
		1: "SUBMITTED",
		2: "READY",
		3: "RUNNING",
		4: "SUCCESS",
		5: "ERROR",
		6: "DELETED",
	}
	Status_value = map[string]int32{
		"UNDEFINED": 0,
		"SUBMITTED": 1,
		"READY":     2,
		"RUNNING":   3,
		"SUCCESS":   4,
		"ERROR":     5,
		"DELETED":   6,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_toolproxy_v1_command_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_toolproxy_v1_command_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_toolproxy_v1_command_proto_rawDescGZIP(), []int{0}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Issuer      string               `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Argv        []string             `protobuf:"bytes,3,rep,name=argv,proto3" json:"argv,omitempty"`
	Description string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Status      Status               `protobuf:"varint,5,opt,name=status,proto3,enum=yggdrasil.toolproxy.v1.Status" json:"status,omitempty"`
	StdOut      []byte               `protobuf:"bytes,6,opt,name=std_out,json=stdOut,proto3" json:"std_out,omitempty"`
	StdErr      []byte               `protobuf:"bytes,7,opt,name=std_err,json=stdErr,proto3" json:"std_err,omitempty"`
	CreateTime  *timestamp.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime  *timestamp.Timestamp `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	DeleteTime  *timestamp.Timestamp `protobuf:"bytes,10,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
	StartTime   *timestamp.Timestamp `protobuf:"bytes,11,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     *timestamp.Timestamp `protobuf:"bytes,12,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toolproxy_v1_command_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_toolproxy_v1_command_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_toolproxy_v1_command_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Command) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *Command) GetArgv() []string {
	if x != nil {
		return x.Argv
	}
	return nil
}

func (x *Command) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Command) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNDEFINED
}

func (x *Command) GetStdOut() []byte {
	if x != nil {
		return x.StdOut
	}
	return nil
}

func (x *Command) GetStdErr() []byte {
	if x != nil {
		return x.StdErr
	}
	return nil
}

func (x *Command) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Command) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Command) GetDeleteTime() *timestamp.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

func (x *Command) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Command) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type ListCommandsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListCommandsRequest) Reset() {
	*x = ListCommandsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toolproxy_v1_command_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommandsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommandsRequest) ProtoMessage() {}

func (x *ListCommandsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toolproxy_v1_command_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommandsRequest.ProtoReflect.Descriptor instead.
func (*ListCommandsRequest) Descriptor() ([]byte, []int) {
	return file_toolproxy_v1_command_proto_rawDescGZIP(), []int{1}
}

func (x *ListCommandsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListCommandsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListCommandsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commands      []*Command `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	NextPageToken string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListCommandsResponse) Reset() {
	*x = ListCommandsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toolproxy_v1_command_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommandsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommandsResponse) ProtoMessage() {}

func (x *ListCommandsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_toolproxy_v1_command_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommandsResponse.ProtoReflect.Descriptor instead.
func (*ListCommandsResponse) Descriptor() ([]byte, []int) {
	return file_toolproxy_v1_command_proto_rawDescGZIP(), []int{2}
}

func (x *ListCommandsResponse) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *ListCommandsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command *Command `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *CreateCommandRequest) Reset() {
	*x = CreateCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toolproxy_v1_command_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommandRequest) ProtoMessage() {}

func (x *CreateCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toolproxy_v1_command_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommandRequest.ProtoReflect.Descriptor instead.
func (*CreateCommandRequest) Descriptor() ([]byte, []int) {
	return file_toolproxy_v1_command_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCommandRequest) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

type GetCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetCommandRequest) Reset() {
	*x = GetCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toolproxy_v1_command_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommandRequest) ProtoMessage() {}

func (x *GetCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toolproxy_v1_command_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommandRequest.ProtoReflect.Descriptor instead.
func (*GetCommandRequest) Descriptor() ([]byte, []int) {
	return file_toolproxy_v1_command_proto_rawDescGZIP(), []int{4}
}

func (x *GetCommandRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RunCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RunCommandRequest) Reset() {
	*x = RunCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toolproxy_v1_command_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCommandRequest) ProtoMessage() {}

func (x *RunCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toolproxy_v1_command_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCommandRequest.ProtoReflect.Descriptor instead.
func (*RunCommandRequest) Descriptor() ([]byte, []int) {
	return file_toolproxy_v1_command_proto_rawDescGZIP(), []int{5}
}

func (x *RunCommandRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Command    *Command               `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateCommandRequest) Reset() {
	*x = UpdateCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toolproxy_v1_command_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommandRequest) ProtoMessage() {}

func (x *UpdateCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toolproxy_v1_command_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommandRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommandRequest) Descriptor() ([]byte, []int) {
	return file_toolproxy_v1_command_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCommandRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCommandRequest) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *UpdateCommandRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type DeleteCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteCommandRequest) Reset() {
	*x = DeleteCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toolproxy_v1_command_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommandRequest) ProtoMessage() {}

func (x *DeleteCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toolproxy_v1_command_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommandRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommandRequest) Descriptor() ([]byte, []int) {
	return file_toolproxy_v1_command_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCommandRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_toolproxy_v1_command_proto protoreflect.FileDescriptor

var file_toolproxy_v1_command_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x79, 0x67,
	0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x7a, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfe,
	0x03, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x76, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x76, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x79,
	0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x74, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x73, 0x74, 0x64, 0x45, 0x72, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x51, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x7b, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79,
	0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x51, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72,
	0x61, 0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x22, 0x27, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x52,
	0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x2e, 0x74,
	0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x2a, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x2a, 0x63, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x06, 0x32, 0xe8, 0x06, 0x0a, 0x09, 0x54,
	0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x8a, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x2b, 0x2e, 0x79, 0x67, 0x67, 0x64,
	0x72, 0x61, 0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73,
	0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x9a, 0xcb, 0xd7, 0x0d, 0x06, 0x12,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x8a, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2c, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61,
	0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69,
	0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x0c,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x3a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x9a, 0xcb, 0xd7, 0x0d, 0x08, 0x12, 0x06, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x29, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f,
	0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x79,
	0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x28, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x3d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2f, 0x2a, 0x7d, 0x9a, 0xcb, 0xd7, 0x0d,
	0x06, 0x12, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x91, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2c, 0x2e, 0x79, 0x67, 0x67, 0x64,
	0x72, 0x61, 0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61,
	0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x32, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x9a, 0xcb, 0xd7, 0x0d, 0x06, 0x12, 0x04, 0x65, 0x64, 0x69, 0x74, 0x12, 0x89, 0x01, 0x0a, 0x0a,
	0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x29, 0x2e, 0x79, 0x67, 0x67,
	0x64, 0x72, 0x61, 0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73, 0x69,
	0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x19,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x72, 0x75, 0x6e, 0x9a, 0xcb, 0xd7, 0x0d, 0x09, 0x12, 0x07,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2c, 0x2e, 0x79, 0x67, 0x67, 0x64,
	0x72, 0x61, 0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61,
	0x73, 0x69, 0x6c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x2a, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2f, 0x2a, 0x7d, 0x9a, 0xcb, 0xd7, 0x0d, 0x08, 0x12, 0x06, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x1a, 0x0f, 0x9a, 0xcb, 0xd7, 0x0d, 0x0a, 0x0a, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x78, 0x74, 0x6b, 0x2f, 0x79, 0x67, 0x67, 0x64, 0x72, 0x61, 0x73,
	0x69, 0x6c, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_toolproxy_v1_command_proto_rawDescOnce sync.Once
	file_toolproxy_v1_command_proto_rawDescData = file_toolproxy_v1_command_proto_rawDesc
)

func file_toolproxy_v1_command_proto_rawDescGZIP() []byte {
	file_toolproxy_v1_command_proto_rawDescOnce.Do(func() {
		file_toolproxy_v1_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_toolproxy_v1_command_proto_rawDescData)
	})
	return file_toolproxy_v1_command_proto_rawDescData
}

var file_toolproxy_v1_command_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_toolproxy_v1_command_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_toolproxy_v1_command_proto_goTypes = []interface{}{
	(Status)(0),                   // 0: yggdrasil.toolproxy.v1.Status
	(*Command)(nil),               // 1: yggdrasil.toolproxy.v1.Command
	(*ListCommandsRequest)(nil),   // 2: yggdrasil.toolproxy.v1.ListCommandsRequest
	(*ListCommandsResponse)(nil),  // 3: yggdrasil.toolproxy.v1.ListCommandsResponse
	(*CreateCommandRequest)(nil),  // 4: yggdrasil.toolproxy.v1.CreateCommandRequest
	(*GetCommandRequest)(nil),     // 5: yggdrasil.toolproxy.v1.GetCommandRequest
	(*RunCommandRequest)(nil),     // 6: yggdrasil.toolproxy.v1.RunCommandRequest
	(*UpdateCommandRequest)(nil),  // 7: yggdrasil.toolproxy.v1.UpdateCommandRequest
	(*DeleteCommandRequest)(nil),  // 8: yggdrasil.toolproxy.v1.DeleteCommandRequest
	(*timestamp.Timestamp)(nil),   // 9: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil), // 10: google.protobuf.FieldMask
}
var file_toolproxy_v1_command_proto_depIdxs = []int32{
	0,  // 0: yggdrasil.toolproxy.v1.Command.status:type_name -> yggdrasil.toolproxy.v1.Status
	9,  // 1: yggdrasil.toolproxy.v1.Command.create_time:type_name -> google.protobuf.Timestamp
	9,  // 2: yggdrasil.toolproxy.v1.Command.update_time:type_name -> google.protobuf.Timestamp
	9,  // 3: yggdrasil.toolproxy.v1.Command.delete_time:type_name -> google.protobuf.Timestamp
	9,  // 4: yggdrasil.toolproxy.v1.Command.start_time:type_name -> google.protobuf.Timestamp
	9,  // 5: yggdrasil.toolproxy.v1.Command.end_time:type_name -> google.protobuf.Timestamp
	1,  // 6: yggdrasil.toolproxy.v1.ListCommandsResponse.commands:type_name -> yggdrasil.toolproxy.v1.Command
	1,  // 7: yggdrasil.toolproxy.v1.CreateCommandRequest.command:type_name -> yggdrasil.toolproxy.v1.Command
	1,  // 8: yggdrasil.toolproxy.v1.UpdateCommandRequest.command:type_name -> yggdrasil.toolproxy.v1.Command
	10, // 9: yggdrasil.toolproxy.v1.UpdateCommandRequest.update_mask:type_name -> google.protobuf.FieldMask
	2,  // 10: yggdrasil.toolproxy.v1.ToolProxy.ListCommands:input_type -> yggdrasil.toolproxy.v1.ListCommandsRequest
	4,  // 11: yggdrasil.toolproxy.v1.ToolProxy.CreateCommand:input_type -> yggdrasil.toolproxy.v1.CreateCommandRequest
	5,  // 12: yggdrasil.toolproxy.v1.ToolProxy.GetCommand:input_type -> yggdrasil.toolproxy.v1.GetCommandRequest
	7,  // 13: yggdrasil.toolproxy.v1.ToolProxy.UpdateCommand:input_type -> yggdrasil.toolproxy.v1.UpdateCommandRequest
	6,  // 14: yggdrasil.toolproxy.v1.ToolProxy.RunCommand:input_type -> yggdrasil.toolproxy.v1.RunCommandRequest
	8,  // 15: yggdrasil.toolproxy.v1.ToolProxy.DeleteCommand:input_type -> yggdrasil.toolproxy.v1.DeleteCommandRequest
	3,  // 16: yggdrasil.toolproxy.v1.ToolProxy.ListCommands:output_type -> yggdrasil.toolproxy.v1.ListCommandsResponse
	1,  // 17: yggdrasil.toolproxy.v1.ToolProxy.CreateCommand:output_type -> yggdrasil.toolproxy.v1.Command
	1,  // 18: yggdrasil.toolproxy.v1.ToolProxy.GetCommand:output_type -> yggdrasil.toolproxy.v1.Command
	1,  // 19: yggdrasil.toolproxy.v1.ToolProxy.UpdateCommand:output_type -> yggdrasil.toolproxy.v1.Command
	1,  // 20: yggdrasil.toolproxy.v1.ToolProxy.RunCommand:output_type -> yggdrasil.toolproxy.v1.Command
	1,  // 21: yggdrasil.toolproxy.v1.ToolProxy.DeleteCommand:output_type -> yggdrasil.toolproxy.v1.Command
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_toolproxy_v1_command_proto_init() }
func file_toolproxy_v1_command_proto_init() {
	if File_toolproxy_v1_command_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_toolproxy_v1_command_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toolproxy_v1_command_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommandsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toolproxy_v1_command_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommandsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toolproxy_v1_command_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toolproxy_v1_command_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toolproxy_v1_command_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toolproxy_v1_command_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toolproxy_v1_command_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_toolproxy_v1_command_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_toolproxy_v1_command_proto_goTypes,
		DependencyIndexes: file_toolproxy_v1_command_proto_depIdxs,
		EnumInfos:         file_toolproxy_v1_command_proto_enumTypes,
		MessageInfos:      file_toolproxy_v1_command_proto_msgTypes,
	}.Build()
	File_toolproxy_v1_command_proto = out.File
	file_toolproxy_v1_command_proto_rawDesc = nil
	file_toolproxy_v1_command_proto_goTypes = nil
	file_toolproxy_v1_command_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ToolProxyClient is the client API for ToolProxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ToolProxyClient interface {
	ListCommands(ctx context.Context, in *ListCommandsRequest, opts ...grpc.CallOption) (*ListCommandsResponse, error)
	CreateCommand(ctx context.Context, in *CreateCommandRequest, opts ...grpc.CallOption) (*Command, error)
	GetCommand(ctx context.Context, in *GetCommandRequest, opts ...grpc.CallOption) (*Command, error)
	UpdateCommand(ctx context.Context, in *UpdateCommandRequest, opts ...grpc.CallOption) (*Command, error)
	RunCommand(ctx context.Context, in *RunCommandRequest, opts ...grpc.CallOption) (*Command, error)
	DeleteCommand(ctx context.Context, in *DeleteCommandRequest, opts ...grpc.CallOption) (*Command, error)
}

type toolProxyClient struct {
	cc grpc.ClientConnInterface
}

func NewToolProxyClient(cc grpc.ClientConnInterface) ToolProxyClient {
	return &toolProxyClient{cc}
}

func (c *toolProxyClient) ListCommands(ctx context.Context, in *ListCommandsRequest, opts ...grpc.CallOption) (*ListCommandsResponse, error) {
	out := new(ListCommandsResponse)
	err := c.cc.Invoke(ctx, "/yggdrasil.toolproxy.v1.ToolProxy/ListCommands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toolProxyClient) CreateCommand(ctx context.Context, in *CreateCommandRequest, opts ...grpc.CallOption) (*Command, error) {
	out := new(Command)
	err := c.cc.Invoke(ctx, "/yggdrasil.toolproxy.v1.ToolProxy/CreateCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toolProxyClient) GetCommand(ctx context.Context, in *GetCommandRequest, opts ...grpc.CallOption) (*Command, error) {
	out := new(Command)
	err := c.cc.Invoke(ctx, "/yggdrasil.toolproxy.v1.ToolProxy/GetCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toolProxyClient) UpdateCommand(ctx context.Context, in *UpdateCommandRequest, opts ...grpc.CallOption) (*Command, error) {
	out := new(Command)
	err := c.cc.Invoke(ctx, "/yggdrasil.toolproxy.v1.ToolProxy/UpdateCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toolProxyClient) RunCommand(ctx context.Context, in *RunCommandRequest, opts ...grpc.CallOption) (*Command, error) {
	out := new(Command)
	err := c.cc.Invoke(ctx, "/yggdrasil.toolproxy.v1.ToolProxy/RunCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toolProxyClient) DeleteCommand(ctx context.Context, in *DeleteCommandRequest, opts ...grpc.CallOption) (*Command, error) {
	out := new(Command)
	err := c.cc.Invoke(ctx, "/yggdrasil.toolproxy.v1.ToolProxy/DeleteCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ToolProxyServer is the server API for ToolProxy service.
type ToolProxyServer interface {
	ListCommands(context.Context, *ListCommandsRequest) (*ListCommandsResponse, error)
	CreateCommand(context.Context, *CreateCommandRequest) (*Command, error)
	GetCommand(context.Context, *GetCommandRequest) (*Command, error)
	UpdateCommand(context.Context, *UpdateCommandRequest) (*Command, error)
	RunCommand(context.Context, *RunCommandRequest) (*Command, error)
	DeleteCommand(context.Context, *DeleteCommandRequest) (*Command, error)
}

// UnimplementedToolProxyServer can be embedded to have forward compatible implementations.
type UnimplementedToolProxyServer struct {
}

func (*UnimplementedToolProxyServer) ListCommands(context.Context, *ListCommandsRequest) (*ListCommandsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCommands not implemented")
}
func (*UnimplementedToolProxyServer) CreateCommand(context.Context, *CreateCommandRequest) (*Command, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCommand not implemented")
}
func (*UnimplementedToolProxyServer) GetCommand(context.Context, *GetCommandRequest) (*Command, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommand not implemented")
}
func (*UnimplementedToolProxyServer) UpdateCommand(context.Context, *UpdateCommandRequest) (*Command, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCommand not implemented")
}
func (*UnimplementedToolProxyServer) RunCommand(context.Context, *RunCommandRequest) (*Command, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunCommand not implemented")
}
func (*UnimplementedToolProxyServer) DeleteCommand(context.Context, *DeleteCommandRequest) (*Command, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCommand not implemented")
}

func RegisterToolProxyServer(s *grpc.Server, srv ToolProxyServer) {
	s.RegisterService(&_ToolProxy_serviceDesc, srv)
}

func _ToolProxy_ListCommands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCommandsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToolProxyServer).ListCommands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yggdrasil.toolproxy.v1.ToolProxy/ListCommands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToolProxyServer).ListCommands(ctx, req.(*ListCommandsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToolProxy_CreateCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToolProxyServer).CreateCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yggdrasil.toolproxy.v1.ToolProxy/CreateCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToolProxyServer).CreateCommand(ctx, req.(*CreateCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToolProxy_GetCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToolProxyServer).GetCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yggdrasil.toolproxy.v1.ToolProxy/GetCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToolProxyServer).GetCommand(ctx, req.(*GetCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToolProxy_UpdateCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToolProxyServer).UpdateCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yggdrasil.toolproxy.v1.ToolProxy/UpdateCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToolProxyServer).UpdateCommand(ctx, req.(*UpdateCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToolProxy_RunCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToolProxyServer).RunCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yggdrasil.toolproxy.v1.ToolProxy/RunCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToolProxyServer).RunCommand(ctx, req.(*RunCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToolProxy_DeleteCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToolProxyServer).DeleteCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yggdrasil.toolproxy.v1.ToolProxy/DeleteCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToolProxyServer).DeleteCommand(ctx, req.(*DeleteCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ToolProxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yggdrasil.toolproxy.v1.ToolProxy",
	HandlerType: (*ToolProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListCommands",
			Handler:    _ToolProxy_ListCommands_Handler,
		},
		{
			MethodName: "CreateCommand",
			Handler:    _ToolProxy_CreateCommand_Handler,
		},
		{
			MethodName: "GetCommand",
			Handler:    _ToolProxy_GetCommand_Handler,
		},
		{
			MethodName: "UpdateCommand",
			Handler:    _ToolProxy_UpdateCommand_Handler,
		},
		{
			MethodName: "RunCommand",
			Handler:    _ToolProxy_RunCommand_Handler,
		},
		{
			MethodName: "DeleteCommand",
			Handler:    _ToolProxy_DeleteCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "toolproxy/v1/command.proto",
}
